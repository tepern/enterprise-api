version: '3'

services: 

    php:
        container_name: ${PROJECT_NAME}-php
        build:
            context: ./docker/php/
            dockerfile: Dockerfile
        volumes:
            - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
            - ./docker/php/config:/usr/local/etc/php/custom.d
        working_dir: ${APP_PATH_CONTAINER}

    web: 
        container_name: ${PROJECT_NAME}-web
        image: nginx
        restart: unless-stopped
        tty: true
        depends_on: 
            - php
            - db
        environment: 
            - NGINX_HOST=${APP_PATH_HOST}
            - NGINX_PORT=80
        volumes: 
            - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
            - ./docker/nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf
        ports: 
            - 80:80
        working_dir: ${APP_PATH_CONTAINER}

    db:
        container_name: ${PROJECT_NAME}-db
        image: postgres
        restart: always
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            PGDATA: /var/lib/postgresql/data/pgdata
        ports:
            - "5432:5432"
        volumes: 
            - ${DB_PATH_HOST}:/var/lib/postgresql/data

    adminer:
        container_name: ${PROJECT_NAME}-adminer
        image: adminer
        restart: always
        ports:
            - 4080:8080

    composer:
        container_name: ${PROJECT_NAME}-composer
        image: composer:2.5  
        volumes:
            - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}      
        working_dir: ${APP_PATH_CONTAINER}
        command: composer update --ignore-platform-reqs && composer install
        
    node:
        container_name: ${PROJECT_NAME}-node
        image: "node:18"
        user: "node"
        tty: true
        environment:
            - NODE_ENV=dev
        working_dir: ${APP_PATH_CONTAINER}
        volumes:
            - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
        expose:
            - "8081"

volumes:
    databases:
        driver: local